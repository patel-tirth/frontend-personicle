import Head from 'next/head';
import styles from '../styles/Home.module.css';
import React, {useContext, useEffect,useState} from "react";
import {signin, signIn, signOut, useSession, providers} from "next-auth/client";
import { AuthState,OktaAuth  } from '@okta/okta-auth-js';
import config from './config';
import AuthenticationContext from '../contexts/authentication';
export default function Home() {
  const[oktaAuth,authState,name] = useContext(AuthenticationContext);
  
  const triggerSignOut = async () => {
   await  oktaAuth.signOut({  clearTokensBeforeRedirect :true ,postLogoutRedirectUri: 'http://localhost:3000/',});
  }

 const triggerLogin = async () => {
   oktaAuth.signInWithRedirect({ originalUri: '/' });
  }

const handleRedirect =  async () => {
    await oktaAuth.handleLoginRedirect({originalUri: 'http://localhost:3000/'});
}
 
  async function authenticateUser(){
    // call the resource server to authenticate the accesstoken only if user is authenticated
    if(authState){
      const access_token = await oktaAuth.tokenManager.get('accessToken');
      console.log(access_token)
    fetch(config.resourceServer.endpoint, {
        headers: {
          Authorization: `Bearer ${access_token.accessToken}`,
          'Access-Control-Allow-Origin': '*',
          'Access-Control-Allow-Methods': "GET,POST,OPTIONS,DELETE,PUT"
        }
      }).then((response) => {
          if (!response.ok) {
            return Promise.reject();
          }
          return response.json();  
        }).then((data)=> {
          const result = data.messages.map((message)=> {
            console.log(message.text)
            return {
              test: message.text
            }
          })
        }).catch((err) => {
          console.error(err);
        });
    }
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Personicle</title>
        {/* <meta name="description" content="Generated by create next app" /> */}
        <link rel="icon" href="/favicon.ico" />
      </Head> 

      <main className={styles.main}>
       {!authState && (
          <>
          Not signed in <br /> 
          <button onClick={triggerLogin}>Sign In With Okta</button> 
          
          </>
        )}
      {authState && (
          <>
          Welcome to the super awesome personicle {name} <br /> 
          
          <button onClick={triggerSignOut}>Sign Out </button> 
          
          <button onClick={authenticateUser}>check user authentication </button> 
        
          </>
        )}

      </main>
    </div>
  )
}
